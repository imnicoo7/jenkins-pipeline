pipeline {
    agent any

    stages {
        stage('CHECKOUT SCM') {
            steps {
                // Clona el repositorio donde estÃ¡ el archivo dataframe.py
                git 'https://github.com/imnicoo7/jenkins-pipeline.git'
            }
        }

        stage('Revisar instalacion pandas') {
            steps {
                sh 'pip list' // revisar que se tenga pandas instalado
            }
        }

        stage('Ejecutar Script Python') {
            steps {
                echo 'Ejecutando script en Python...'
                // Ejecutar el script Python para generar el archivo CSV
                sh 'python3 dataframe.py'
            }
        }

        stage('Leer el DataFrame y tomar decisiones') {
            steps {
                script {
                    // Ejecutar un script Python para leer el CSV y devolver las tareas pendientes
                    def csvData = sh(script: '''
                        python3 -c "
                        import pandas as pd
                        df = pd.read_csv('resultado.csv')
                        for index, row in df.iterrows():
                            if row['Tarea'] == 'Hijo 1' and row['Estado'] == 'Pendiente':
                                print('Hijo 1')
                            elif row['Tarea'] == 'Hijo 2' and row['Estado'] == 'Pendiente':
                                print('Hijo 2')
                        "
                    ''', returnStdout: true).trim()

                    // Iterar sobre las tareas pendientes devueltas por el script
                    csvData.split('\n').each { task ->
                        if (task == 'Hijo 1') {
                            echo 'Llamando a hijo 1...'
                            build job: 'hijo1'
                        } else if (task == 'Hijo 2') {
                            echo 'Llamando a hijo 2...'
                            build job: 'hijo2'
                        } else {
                            echo 'No hay tareas pendientes.'
                        }
                    }
                }
            }
        }
    }
}
