pipeline {
    agent any

    stages {
        stage('CHECKOUT SCM') {
            steps {
                // Clona el repositorio donde estÃ¡ el archivo dataframe.py
                git 'https://github.com/imnicoo7/jenkins-pipeline.git'
            }
        }

        stage('Revisar instalacion pandas') {
            steps {
                sh 'pip list' // revisar que se tenga pandas instalado
            }
        }

        stage('Ejecutar Script Python') {
            steps {
                echo 'Ejecutando script en Python...'
                // Ejecutar el script Python para generar el archivo CSV
                sh 'python3 dataframe.py'
            }
        }

        stage('Leer el DataFrame y tomar decisiones') {
            steps {
                script {
                    // Leer el archivo CSV generado usando comandos de shell y awk
                    def csvData = sh(script: "awk -F',' 'NR>1{print \$1\",\" \$2}' resultado.csv", returnStdout: true).trim()
                    
                    // Iterar sobre las filas del CSV
                    csvData.split('\n').each { row ->
                        def (tarea, estado) = row.split(',')
                        if (tarea == 'Hijo 1' && estado == 'Pendiente') {
                            echo 'Llamando a hijo 1...'
                            build job: 'hijo1'
                        } else if (tarea == 'Hijo 2' && estado == 'Pendiente') {
                            echo 'Llamando a hijo 2...'
                            build job: 'hijo2'
                        } else {
                            echo 'No hay tareas pendientes.'
                        }
                    }
                }
            }
        }

    }
}
